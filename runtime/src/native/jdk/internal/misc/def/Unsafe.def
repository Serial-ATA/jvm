import java.lang.Object;
import java.lang.Throwable;
import java.lang.ClassLoader;
import java.lang.Class;
import java.lang.String;

import java.lang.reflect.Field;
import java.security.ProtectionDomain;

public final class Unsafe {
    private static native void registerNatives();

    @IntrinsicCandidate
    public native int     getInt(Object o, long offset);
    @IntrinsicCandidate
    public native void    putInt(Object o, long offset, int x);
    @IntrinsicCandidate
    public native Object  getReference(Object o, long offset);
    @IntrinsicCandidate
    public native void    putReference(Object o, long offset, Object x);
    @IntrinsicCandidate
    public native boolean getBoolean(Object o, long offset);
    @IntrinsicCandidate
    public native void    putBoolean(Object o, long offset, boolean x);
    @IntrinsicCandidate
    public native byte    getByte(Object o, long offset);
    @IntrinsicCandidate
    public native void    putByte(Object o, long offset, byte x);
    @IntrinsicCandidate
    public native short   getShort(Object o, long offset);
    @IntrinsicCandidate
    public native void    putShort(Object o, long offset, short x);
    @IntrinsicCandidate
    public native char    getChar(Object o, long offset);
    @IntrinsicCandidate
    public native void    putChar(Object o, long offset, char x);
    @IntrinsicCandidate
    public native long    getLong(Object o, long offset);
    @IntrinsicCandidate
    public native void    putLong(Object o, long offset, long x);
    @IntrinsicCandidate
    public native float   getFloat(Object o, long offset);
    @IntrinsicCandidate
    public native void    putFloat(Object o, long offset, float x);
    @IntrinsicCandidate
    public native double  getDouble(Object o, long offset);
    @IntrinsicCandidate
    public native void    putDouble(Object o, long offset, double x);

    public native Object getUncompressedObject(long address);

    @IntrinsicCandidate
    private native void writeback0(long address);
    @IntrinsicCandidate
    private native void writebackPreSync0();
    @IntrinsicCandidate
    private native void writebackPostSync0();

    public native Class<?> defineClass0(String name, byte[] b, int off, int len,
                                        ClassLoader loader,
                                        ProtectionDomain protectionDomain);

    @IntrinsicCandidate
    public native Object allocateInstance(Class<?> cls)
            throws InstantiationException;

    @IntrinsicCandidate
    private Object allocateUninitializedArray0(Class<?> componentType, int length);

    public native void throwException(Throwable ee);

    @IntrinsicCandidate
    public final native boolean compareAndSetReference(Object o, long offset,
                                                       Object expected,
                                                       Object x);
    @IntrinsicCandidate
    public final native Object compareAndExchangeReference(Object o, long offset,
                                                           Object expected,
                                                           Object x);
    @IntrinsicCandidate
    public final Object compareAndExchangeReferenceAcquire(Object o, long offset,
                                                           Object expected,
                                                           Object x);
    @IntrinsicCandidate
    public final Object compareAndExchangeReferenceRelease(Object o, long offset,
                                                           Object expected,
                                                           Object x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetReferencePlain(Object o, long offset,
                                                         Object expected,
                                                         Object x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetReferenceAcquire(Object o, long offset,
                                                           Object expected,
                                                           Object x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetReferenceRelease(Object o, long offset,
                                                           Object expected,
                                                           Object x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetReference(Object o, long offset,
                                                    Object expected,
                                                    Object x);

    @IntrinsicCandidate
    public final native boolean compareAndSetInt(Object o, long offset,
                                                 int expected,
                                                 int x);
    @IntrinsicCandidate
    public final native int compareAndExchangeInt(Object o, long offset,
                                                  int expected,
                                                  int x);
    @IntrinsicCandidate
    public final int compareAndExchangeIntAcquire(Object o, long offset,
                                                         int expected,
                                                         int x);
    @IntrinsicCandidate
    public final int compareAndExchangeIntRelease(Object o, long offset,
                                                         int expected,
                                                         int x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetIntPlain(Object o, long offset,
                                                   int expected,
                                                   int x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetIntAcquire(Object o, long offset,
                                                     int expected,
                                                     int x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetIntRelease(Object o, long offset,
                                                     int expected,
                                                     int x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetInt(Object o, long offset,
                                              int expected,
                                              int x);
    @IntrinsicCandidate
    public final byte compareAndExchangeByte(Object o, long offset,
                                             byte expected,
                                             byte x);
    @IntrinsicCandidate
    public final boolean compareAndSetByte(Object o, long offset,
                                           byte expected,
                                           byte x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetByte(Object o, long offset,
                                               byte expected,
                                               byte x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetByteAcquire(Object o, long offset,
                                                      byte expected,
                                                      byte x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetByteRelease(Object o, long offset,
                                                      byte expected,
                                                      byte x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetBytePlain(Object o, long offset,
                                                    byte expected,
                                                    byte x);
    @IntrinsicCandidate
    public final byte compareAndExchangeByteAcquire(Object o, long offset,
                                                    byte expected,
                                                    byte x);
    @IntrinsicCandidate
    public final byte compareAndExchangeByteRelease(Object o, long offset,
                                                    byte expected,
                                                    byte x);
    @IntrinsicCandidate
    public final short compareAndExchangeShort(Object o, long offset,
                                               short expected,
                                               short x);
    @IntrinsicCandidate
    public final boolean compareAndSetShort(Object o, long offset,
                                            short expected,
                                            short x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetShort(Object o, long offset,
                                                short expected,
                                                short x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetShortAcquire(Object o, long offset,
                                                       short expected,
                                                       short x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetShortRelease(Object o, long offset,
                                                       short expected,
                                                       short x);
    @IntrinsicCandidate
    public final boolean weakCompareAndSetShortPlain(Object o, long offset,
                                                     short expected,
                                                     short x);
    @IntrinsicCandidate
    public final short compareAndExchangeShortAcquire(Object o, long offset,
                                                     short expected,
                                                     short x);
    @IntrinsicCandidate
    public final short compareAndExchangeShortRelease(Object o, long offset,
                                                    short expected,
                                                    short x);

    @IntrinsicCandidate
    public final native boolean compareAndSetLong(Object o, long offset,
                                                  long expected,
                                                  long x);
    @IntrinsicCandidate
    public final native long compareAndExchangeLong(Object o, long offset,
                                                    long expected,
                                                    long x);

    @IntrinsicCandidate
    public final long compareAndExchangeLongAcquire(Object o, long offset,
                                                           long expected,
                                                           long x);

    @IntrinsicCandidate
    public final long compareAndExchangeLongRelease(Object o, long offset,
                                                           long expected,
                                                           long x);

    @IntrinsicCandidate
    public final boolean weakCompareAndSetLongPlain(Object o, long offset,
                                                    long expected,
                                                    long x);

    @IntrinsicCandidate
    public final boolean weakCompareAndSetLongAcquire(Object o, long offset,
                                                      long expected,
                                                      long x);

    @IntrinsicCandidate
    public final boolean weakCompareAndSetLongRelease(Object o, long offset,
                                                      long expected,
                                                      long x);

    @IntrinsicCandidate
    public final boolean weakCompareAndSetLong(Object o, long offset,
                                               long expected,
                                               long x);

    @IntrinsicCandidate
    public native Object getReferenceVolatile(Object o, long offset);
    @IntrinsicCandidate
    public native void putReferenceVolatile(Object o, long offset, Object x);
    @IntrinsicCandidate
    public native int     getIntVolatile(Object o, long offset);
    @IntrinsicCandidate
    public native void    putIntVolatile(Object o, long offset, int x);
    @IntrinsicCandidate
    public native boolean getBooleanVolatile(Object o, long offset);
    @IntrinsicCandidate
    public native void    putBooleanVolatile(Object o, long offset, boolean x);
    @IntrinsicCandidate
    public native byte    getByteVolatile(Object o, long offset);
    @IntrinsicCandidate
    public native void    putByteVolatile(Object o, long offset, byte x);
    @IntrinsicCandidate
    public native short   getShortVolatile(Object o, long offset);
    @IntrinsicCandidate
    public native void    putShortVolatile(Object o, long offset, short x);
    @IntrinsicCandidate
    public native char    getCharVolatile(Object o, long offset);
    @IntrinsicCandidate
    public native void    putCharVolatile(Object o, long offset, char x);
    @IntrinsicCandidate
    public native long    getLongVolatile(Object o, long offset);
    @IntrinsicCandidate
    public native void    putLongVolatile(Object o, long offset, long x);
    @IntrinsicCandidate
    public native float   getFloatVolatile(Object o, long offset);
    @IntrinsicCandidate
    public native void    putFloatVolatile(Object o, long offset, float x);
    @IntrinsicCandidate
    public native double  getDoubleVolatile(Object o, long offset);
    @IntrinsicCandidate
    public native void    putDoubleVolatile(Object o, long offset, double x);


    @IntrinsicCandidate
    public final Object getReferenceAcquire(Object o, long offset);
    @IntrinsicCandidate
    public final boolean getBooleanAcquire(Object o, long offset);
    @IntrinsicCandidate
    public final byte getByteAcquire(Object o, long offset);
    @IntrinsicCandidate
    public final short getShortAcquire(Object o, long offset);
    @IntrinsicCandidate
    public final char getCharAcquire(Object o, long offset);
    @IntrinsicCandidate
    public final int getIntAcquire(Object o, long offset);
    @IntrinsicCandidate
    public final float getFloatAcquire(Object o, long offset);
    @IntrinsicCandidate
    public final long getLongAcquire(Object o, long offset);
    @IntrinsicCandidate
    public final double getDoubleAcquire(Object o, long offset);
    @IntrinsicCandidate
    public final void putReferenceRelease(Object o, long offset, Object x);
    @IntrinsicCandidate
    public final void putBooleanRelease(Object o, long offset, boolean x);
    @IntrinsicCandidate
    public final void putByteRelease(Object o, long offset, byte x);
    @IntrinsicCandidate
    public final void putShortRelease(Object o, long offset, short x);
    @IntrinsicCandidate
    public final void putCharRelease(Object o, long offset, char x);
    @IntrinsicCandidate
    public final void putIntRelease(Object o, long offset, int x);
    @IntrinsicCandidate
    public final void putFloatRelease(Object o, long offset, float x);
    @IntrinsicCandidate
    public final void putLongRelease(Object o, long offset, long x);
    @IntrinsicCandidate
    public final void putDoubleRelease(Object o, long offset, double x);

    // ------------------------------ Opaque --------------------------------------

    @IntrinsicCandidate
    public final Object getReferenceOpaque(Object o, long offset);
    @IntrinsicCandidate
    public final boolean getBooleanOpaque(Object o, long offset);
    @IntrinsicCandidate
    public final byte getByteOpaque(Object o, long offset);
    @IntrinsicCandidate
    public final short getShortOpaque(Object o, long offset);
    @IntrinsicCandidate
    public final char getCharOpaque(Object o, long offset);
    @IntrinsicCandidate
    public final int getIntOpaque(Object o, long offset);
    @IntrinsicCandidate
    public final float getFloatOpaque(Object o, long offset);
    @IntrinsicCandidate
    public final long getLongOpaque(Object o, long offset);
    @IntrinsicCandidate
    public final double getDoubleOpaque(Object o, long offset);
    @IntrinsicCandidate
    public final void putReferenceOpaque(Object o, long offset, Object x);
    @IntrinsicCandidate
    public final void putBooleanOpaque(Object o, long offset, boolean x);
    @IntrinsicCandidate
    public final void putByteOpaque(Object o, long offset, byte x);
    @IntrinsicCandidate
    public final void putShortOpaque(Object o, long offset, short x);
    @IntrinsicCandidate
    public final void putCharOpaque(Object o, long offset, char x);
    @IntrinsicCandidate
    public final void putIntOpaque(Object o, long offset, int x);
    @IntrinsicCandidate
    public final void putFloatOpaque(Object o, long offset, float x);
    @IntrinsicCandidate
    public final void putLongOpaque(Object o, long offset, long x);
    @IntrinsicCandidate
    public final void putDoubleOpaque(Object o, long offset, double x);

    @IntrinsicCandidate
    public native void unpark(Object thread);
    @IntrinsicCandidate
    public native void park(boolean isAbsolute, long time);

    @IntrinsicCandidate
    public final int getAndAddInt(Object o, long offset, int delta);
    @IntrinsicCandidate
    public final long getAndAddLong(Object o, long offset, long delta);
    @IntrinsicCandidate
    public final byte getAndAddByte(Object o, long offset, byte delta);
    @IntrinsicCandidate
    public final short getAndAddShort(Object o, long offset, short delta);
    @IntrinsicCandidate
    public final int getAndSetInt(Object o, long offset, int newValue);
    @IntrinsicCandidate
    public final long getAndSetLong(Object o, long offset, long newValue);
    @IntrinsicCandidate
    public final Object getAndSetReference(Object o, long offset, Object newValue);
    @IntrinsicCandidate
    public final byte getAndSetByte(Object o, long offset, byte newValue);
    @IntrinsicCandidate
    public final short getAndSetShort(Object o, long offset, short newValue);

    @IntrinsicCandidate
    public final void loadFence();
    @IntrinsicCandidate
    public final void storeFence();
    @IntrinsicCandidate
    public native void fullFence();
    @IntrinsicCandidate
    public final void storeStoreFence();

    @IntrinsicCandidate
    public final long getLongUnaligned(Object o, long offset);
    @IntrinsicCandidate
    public final int getIntUnaligned(Object o, long offset);
    @IntrinsicCandidate
    public final short getShortUnaligned(Object o, long offset);
    @IntrinsicCandidate
    public final char getCharUnaligned(Object o, long offset);
    @IntrinsicCandidate
    public final void putLongUnaligned(Object o, long offset, long x);
    @IntrinsicCandidate
    public final void putIntUnaligned(Object o, long offset, int x);
    @IntrinsicCandidate
    public final void putShortUnaligned(Object o, long offset, short x);
    @IntrinsicCandidate
    public final void putCharUnaligned(Object o, long offset, char x);

    private native long    allocateMemory0(long bytes);
    private native long    reallocateMemory0(long address, long bytes);
    private native void    freeMemory0(long address);
    private native void    setMemory0(Object o, long offset, long bytes, byte value);
    @IntrinsicCandidate
    private native void    copyMemory0(Object srcBase, long srcOffset, Object destBase, long destOffset, long bytes);
    private native void    copySwapMemory0(Object srcBase, long srcOffset, Object destBase, long destOffset, long bytes, long elemSize);
    private native long    objectFieldOffset0(Field f);
    private native long    objectFieldOffset1(Class<?> c, String name);
    private native long    staticFieldOffset0(Field f);
    private native Object  staticFieldBase0(Field f);
    private native boolean shouldBeInitialized0(Class<?> c);
    private native void    ensureClassInitialized0(Class<?> c);
    private native int     arrayBaseOffset0(Class<?> arrayClass);
    private native int     arrayIndexScale0(Class<?> arrayClass);
    private native int     getLoadAverage0(double[] loadavg, int nelems);
}