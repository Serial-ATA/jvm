#![allow(non_snake_case)]

use crate::stack::local_stack::LocalStack;

use std::collections::HashMap;
use std::sync::RwLock;

use classfile::types::u1;
use once_cell::sync::Lazy;

mod java;

#[derive(Copy, Clone, Eq, Hash, PartialEq)]
pub struct NativeMethodDef<'a> {
	pub class: &'a [u1],
	pub name: &'a [u1],
	pub descriptor: &'a [u1],
}

pub type NativeMethodPtr = fn(LocalStack);

include!("native_init.rs"); // Provides `init_native_method_table()`, generated by `runtime/build.rs`
pub(self) static NATIVE_METHOD_TABLE: Lazy<
	RwLock<HashMap<NativeMethodDef<'static>, NativeMethodPtr>>,
> = Lazy::new(|| RwLock::new(init_native_method_table()));

pub fn lookup_method(def: NativeMethodDef<'_>) -> NativeMethodPtr {
	NATIVE_METHOD_TABLE.read().unwrap()[&def]
}

pub(self) fn insert_method((def, ptr): (NativeMethodDef<'static>, NativeMethodPtr)) {
	NATIVE_METHOD_TABLE.write().unwrap().insert(def, ptr);
}
