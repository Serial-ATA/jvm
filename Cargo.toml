[workspace]
resolver = "2"
members = [
    "generators/*",
    "tools/*",
    "classfile",
    "instructions",
    "runtime",
    "common",
    "jimage",
    "jmod",
    "versioning",
    "platform",
    "jni",
    "jni/sys",
    # Native libraries
    "native/*"
]

[workspace.package]
authors = ["Serial <69764315+Serial-ATA@users.noreply.github.com>"]
repository = "https://github.com/Serial-ATA/jvm"
edition = "2024"
license = "MIT OR APACHE-2.0"

[workspace.lints.rust]
rust_2018_idioms = { level = "deny", priority = -1 }
rust_2021_compatibility = { level = "deny", priority = -1 }
rust_2024_compatibility = { level = "deny", priority = -1 }
trivial_casts = "deny"
trivial_numeric_casts = "deny"
unused_import_braces = "deny"
explicit_outlives_requirements = "deny"
unknown_lints = "allow"

[workspace.lints.clippy]
# Doc stuff
missing_panics_doc = "allow"
missing_errors_doc = "allow"
tabs_in_doc_comments = "allow"

string_to_string = "deny"
pedantic = { level = "deny", priority = -1 }
all = { level = "deny", priority = -1 }
too_many_lines = "allow"
cast_precision_loss = "allow"
cast_sign_loss = "allow"
cast_possible_wrap = "allow"
cast_possible_truncation = "allow"
module_name_repetitions = "allow"
must_use_candidate = "allow"
doc_markdown = "allow"
match_wildcard_for_single_variants = "allow"
semicolon_if_nothing_returned = "allow"
from_over_into = "allow"
upper_case_acronyms = "allow"
single_match_else = "allow"
similar_names = "allow"
len_without_is_empty = "allow"
needless_late_init = "allow"
type_complexity = "allow"
return_self_not_must_use = "allow"
bool_to_int_with_if = "allow"
uninlined_format_args = "allow" # This should be changed for any normal "{}", but I'm not a fan of it for any debug or width specific formatting
let_underscore_untyped = "allow"
field_reassign_with_default = "allow"
manual_range_patterns = "allow" # This is not at all clearer as it suggests
no_effect_underscore_binding = "allow"
used_underscore_binding = "allow"
ignored_unit_patterns = "allow" # Not a fan of this lint, doesn't make anything clearer as it claims
needless_return = "allow" # Explicit returns are needed from time to time for clarity
redundant_guards = "allow" # Currently broken for some cases, might enable later
into_iter_without_iter = "allow" # This is only going to fire on some internal types, doesn't matter much
struct_excessive_bools = "allow" # I have yet to find one case of this being useful
needless_continue = "allow" # All occurences of this lint are just for clarity in large loops
unbuffered_bytes = "allow" # It is up to the caller to wrap their data in `BufReader`s
struct_field_names = "allow"
new_ret_no_self = "allow" # Violations of this lint are intentional
inline_always = "allow"
wildcard_imports = "allow"
linkedlist = "allow"
new_without_default = "allow" # Doesn't matter, not building a public API
cast_ptr_alignment = "allow"
transmute_bytes_to_str = "allow" # This is only done on guaranteed UTF-8 inputs
too_many_arguments = "allow" # Rarely in our control

[workspace.dependencies]
runtime = { path = "runtime" }
classfile = { path = "classfile" }
common = { path = "common" }
instructions = { path = "instructions" }
jimage = { path = "jimage" }
jni = { path = "jni" }
jni_sys = { path = "jni/sys" }
platform = { path = "platform" }
vm_symbols = { path = "generators/vm_symbols" }

# Native libraries
native-macros = { path = "native/macros" }
libc = "0.2"
windows = "0.61.3"
libffi = "4.1.1"

byteorder = "1.5.0"
byte-slice-cast = "1.2.2"
cfg-if = "1.0.0"
const_format = "0.2.33"
fxhash = "0.2.1"
tracing = "0.1.41"
paste = "1.0.15"
zip = { version = "4.0.0", default-features = false }
build-deps = "0.1.4"

# Generators
combine = "4.6.7"
bitflags = "2.6.0"
indexmap = "2.7.0"
proc-macro2 = "1"
quote = "1"
syn = { version = "2", default-features = false }
walkdir = "2.5.0"

# Tools
clap = "4.0.29"
tracing-subscriber = "0.3.18"
