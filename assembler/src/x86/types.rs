#[derive(Copy, Clone, Eq, PartialEq, Debug)]
pub enum Type {
	#[doc(hidden)]
	/// Exists only for empty operand storage
	NONE,

	HINT,

	IMM_8,
	IMM_16,
	IMM_32,
	IMM_64,
	ZERO,
	ONE,
	THREE,

	M_8,
	M_16,
	M_32,
	M_64,
	M_128,
	M_256,
	M_16_INT,
	M_32_INT,
	M_64_INT,
	M_32_FP,
	M_64_FP,
	M_80_FP,
	M_80_BCD,
	M_2_BYTE,
	M_28_BYTE,
	M_108_BYTE,
	M_512_BYTE,
	FAR_PTR_16_16,
	FAR_PTR_16_32,
	FAR_PTR_16_64,

	MM,

	PREF_66,
	PREF_REX_W,
	FAR,

	MOFFS_8,
	MOFFS_16,
	MOFFS_32,
	MOFFS_64,

	R_8,
	RH,
	AL,
	CL,
	R_16,
	AX,
	DX,
	R_32,
	EAX,
	R_64,
	RAX,

	REL_8,
	REL_32,

	SREG,
	FS,
	GS,

	ST,

	XMM,

	YMM,
}

impl Type {
	#[rustfmt::skip]
	pub fn size(self) -> u16 {
        match self {
            Type::IMM_8         => 8,
            Type::IMM_16        => 16,
            Type::IMM_32        => 32,
            Type::IMM_64        => 64,
            Type::ZERO          => 0,
            Type::HINT          => 0,
            Type::ONE           => 0,
            Type::THREE         => 0,
            Type::LABEL         => 0,
            Type::M_8           => 8,
            Type::M_16          => 16,
            Type::M_32          => 32,
            Type::M_64          => 64,
            Type::M_128         => 128,
            Type::M_256         => 256,
            Type::M_16_INT      => 16,
            Type::M_32_INT      => 32,
            Type::M_64_INT      => 64,
            Type::M_32_FP       => 32,
            Type::M_64_FP       => 64,
            Type::M_80_FP       => 80,
            Type::M_80_BCD      => 80,
            Type::M_2_BYTE      => 2,
            Type::M_28_BYTE     => 28,
            Type::M_108_BYTE    => 108,
            Type::M_512_BYTE    => 512,
            Type::FAR_PTR_16_16 => 0,
            Type::FAR_PTR_16_32 => 0,
            Type::FAR_PTR_16_64 => 0,
            Type::MM            => 64,
            Type::MOFFS_8       => 8,
            Type::MOFFS_16      => 16,
            Type::MOFFS_32      => 32,
            Type::MOFFS_64      => 64,
            Type::PREF_66       => 0,
            Type::PREF_REX_W    => 0,
            Type::FAR           => 0,
            Type::RH            => 8,
            Type::AL            => 8,
            Type::CL            => 8,
            Type::R_8           => 8,
            Type::AX            => 16,
            Type::DX            => 16,
            Type::R_16          => 16,
            Type::EAX           => 32,
            Type::R_32          => 32,
            Type::RAX           => 64,
            Type::R_64          => 64,
            Type::REL_8         => 8,
            Type::REL_32        => 32,
            Type::FS            => 0,
            Type::GS            => 0,
            Type::SREG          => 0,
            Type::ST            => 0,
            Type::XMM           => 128,
            Type::YMM           => 256,
        }
    }
}
